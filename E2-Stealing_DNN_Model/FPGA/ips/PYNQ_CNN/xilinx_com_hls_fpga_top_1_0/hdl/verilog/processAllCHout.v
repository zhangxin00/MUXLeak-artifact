// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module processAllCHout (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        ch_out_V_dout,
        ch_out_V_empty_n,
        ch_out_V_read,
        ci_in_V_dout,
        ci_in_V_empty_n,
        ci_in_V_read,
        p_read,
        pixels_0_read,
        pixels_1_read,
        pixels_2_read,
        pixels_3_read,
        pixels_4_read,
        pixels_5_read,
        pixels_6_read,
        pixels_7_read,
        pixels_8_read,
        WeightsCache_kernel,
        WBRAM_0_0_0_address0,
        WBRAM_0_0_0_ce0,
        WBRAM_0_0_0_q0,
        WBRAM_0_0_1_address0,
        WBRAM_0_0_1_ce0,
        WBRAM_0_0_1_q0,
        WBRAM_0_0_2_address0,
        WBRAM_0_0_2_ce0,
        WBRAM_0_0_2_q0,
        WBRAM_0_0_3_address0,
        WBRAM_0_0_3_ce0,
        WBRAM_0_0_3_q0,
        WBRAM_0_0_4_address0,
        WBRAM_0_0_4_ce0,
        WBRAM_0_0_4_q0,
        WBRAM_0_0_5_address0,
        WBRAM_0_0_5_ce0,
        WBRAM_0_0_5_q0,
        WBRAM_0_0_6_address0,
        WBRAM_0_0_6_ce0,
        WBRAM_0_0_6_q0,
        WBRAM_0_0_7_address0,
        WBRAM_0_0_7_ce0,
        WBRAM_0_0_7_q0,
        WBRAM_0_0_8_address0,
        WBRAM_0_0_8_ce0,
        WBRAM_0_0_8_q0,
        OutputCache_OBRAM_address0,
        OutputCache_OBRAM_ce0,
        OutputCache_OBRAM_we0,
        OutputCache_OBRAM_d0,
        OutputCache_OBRAM_q0,
        OutputCache_OBRAM_address1,
        OutputCache_OBRAM_ce1,
        OutputCache_OBRAM_we1,
        OutputCache_OBRAM_d1
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state63 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [9:0] ch_out_V_dout;
input   ch_out_V_empty_n;
output   ch_out_V_read;
input  [9:0] ci_in_V_dout;
input   ci_in_V_empty_n;
output   ci_in_V_read;
input  [18:0] p_read;
input  [31:0] pixels_0_read;
input  [31:0] pixels_1_read;
input  [31:0] pixels_2_read;
input  [31:0] pixels_3_read;
input  [31:0] pixels_4_read;
input  [31:0] pixels_5_read;
input  [31:0] pixels_6_read;
input  [31:0] pixels_7_read;
input  [31:0] pixels_8_read;
input  [1:0] WeightsCache_kernel;
output  [9:0] WBRAM_0_0_0_address0;
output   WBRAM_0_0_0_ce0;
input  [31:0] WBRAM_0_0_0_q0;
output  [9:0] WBRAM_0_0_1_address0;
output   WBRAM_0_0_1_ce0;
input  [31:0] WBRAM_0_0_1_q0;
output  [9:0] WBRAM_0_0_2_address0;
output   WBRAM_0_0_2_ce0;
input  [31:0] WBRAM_0_0_2_q0;
output  [9:0] WBRAM_0_0_3_address0;
output   WBRAM_0_0_3_ce0;
input  [31:0] WBRAM_0_0_3_q0;
output  [9:0] WBRAM_0_0_4_address0;
output   WBRAM_0_0_4_ce0;
input  [31:0] WBRAM_0_0_4_q0;
output  [9:0] WBRAM_0_0_5_address0;
output   WBRAM_0_0_5_ce0;
input  [31:0] WBRAM_0_0_5_q0;
output  [9:0] WBRAM_0_0_6_address0;
output   WBRAM_0_0_6_ce0;
input  [31:0] WBRAM_0_0_6_q0;
output  [9:0] WBRAM_0_0_7_address0;
output   WBRAM_0_0_7_ce0;
input  [31:0] WBRAM_0_0_7_q0;
output  [9:0] WBRAM_0_0_8_address0;
output   WBRAM_0_0_8_ce0;
input  [31:0] WBRAM_0_0_8_q0;
output  [8:0] OutputCache_OBRAM_address0;
output   OutputCache_OBRAM_ce0;
output   OutputCache_OBRAM_we0;
output  [31:0] OutputCache_OBRAM_d0;
input  [31:0] OutputCache_OBRAM_q0;
output  [8:0] OutputCache_OBRAM_address1;
output   OutputCache_OBRAM_ce1;
output   OutputCache_OBRAM_we1;
output  [31:0] OutputCache_OBRAM_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg ch_out_V_read;
reg ci_in_V_read;
reg WBRAM_0_0_0_ce0;
reg WBRAM_0_0_1_ce0;
reg WBRAM_0_0_2_ce0;
reg WBRAM_0_0_3_ce0;
reg WBRAM_0_0_4_ce0;
reg WBRAM_0_0_5_ce0;
reg WBRAM_0_0_6_ce0;
reg WBRAM_0_0_7_ce0;
reg WBRAM_0_0_8_ce0;
reg[8:0] OutputCache_OBRAM_address0;
reg OutputCache_OBRAM_ce0;
reg OutputCache_OBRAM_we0;
reg OutputCache_OBRAM_ce1;
reg OutputCache_OBRAM_we1;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ch_out_V_blk_n;
reg    ci_in_V_blk_n;
reg   [9:0] t_V_reg_340;
reg   [9:0] t_V_reg_340_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    ap_block_state15_pp0_stage0_iter13;
wire    ap_block_state16_pp0_stage0_iter14;
wire    ap_block_state17_pp0_stage0_iter15;
wire    ap_block_state18_pp0_stage0_iter16;
wire    ap_block_state19_pp0_stage0_iter17;
wire    ap_block_state20_pp0_stage0_iter18;
wire    ap_block_state21_pp0_stage0_iter19;
wire    ap_block_state22_pp0_stage0_iter20;
wire    ap_block_state23_pp0_stage0_iter21;
wire    ap_block_state24_pp0_stage0_iter22;
wire    ap_block_state25_pp0_stage0_iter23;
wire    ap_block_state26_pp0_stage0_iter24;
wire    ap_block_state27_pp0_stage0_iter25;
wire    ap_block_state28_pp0_stage0_iter26;
wire    ap_block_state29_pp0_stage0_iter27;
wire    ap_block_state30_pp0_stage0_iter28;
wire    ap_block_state31_pp0_stage0_iter29;
wire    ap_block_state32_pp0_stage0_iter30;
wire    ap_block_state33_pp0_stage0_iter31;
wire    ap_block_state34_pp0_stage0_iter32;
wire    ap_block_state35_pp0_stage0_iter33;
wire    ap_block_state36_pp0_stage0_iter34;
wire    ap_block_state37_pp0_stage0_iter35;
wire    ap_block_state38_pp0_stage0_iter36;
wire    ap_block_state39_pp0_stage0_iter37;
wire    ap_block_state40_pp0_stage0_iter38;
wire    ap_block_state41_pp0_stage0_iter39;
wire    ap_block_state42_pp0_stage0_iter40;
wire    ap_block_state43_pp0_stage0_iter41;
wire    ap_block_state44_pp0_stage0_iter42;
wire    ap_block_state45_pp0_stage0_iter43;
wire    ap_block_state46_pp0_stage0_iter44;
wire    ap_block_state47_pp0_stage0_iter45;
wire    ap_block_state48_pp0_stage0_iter46;
wire    ap_block_state49_pp0_stage0_iter47;
wire    ap_block_state50_pp0_stage0_iter48;
wire    ap_block_state51_pp0_stage0_iter49;
wire    ap_block_state52_pp0_stage0_iter50;
wire    ap_block_state53_pp0_stage0_iter51;
wire    ap_block_state54_pp0_stage0_iter52;
wire    ap_block_state55_pp0_stage0_iter53;
wire    ap_block_state56_pp0_stage0_iter54;
wire    ap_block_state57_pp0_stage0_iter55;
wire    ap_block_state58_pp0_stage0_iter56;
wire    ap_block_state59_pp0_stage0_iter57;
wire    ap_block_state60_pp0_stage0_iter58;
wire    ap_block_state61_pp0_stage0_iter59;
wire    ap_block_state62_pp0_stage0_iter60;
wire    ap_block_pp0_stage0_11001;
reg   [9:0] t_V_reg_340_pp0_iter2_reg;
reg   [9:0] t_V_reg_340_pp0_iter3_reg;
reg   [9:0] t_V_reg_340_pp0_iter4_reg;
reg   [9:0] t_V_reg_340_pp0_iter5_reg;
reg   [9:0] t_V_reg_340_pp0_iter6_reg;
reg   [9:0] t_V_reg_340_pp0_iter7_reg;
reg   [9:0] t_V_reg_340_pp0_iter8_reg;
reg   [9:0] t_V_reg_340_pp0_iter9_reg;
reg   [9:0] t_V_reg_340_pp0_iter10_reg;
reg   [9:0] t_V_reg_340_pp0_iter11_reg;
reg   [9:0] t_V_reg_340_pp0_iter12_reg;
reg   [9:0] t_V_reg_340_pp0_iter13_reg;
reg   [9:0] t_V_reg_340_pp0_iter14_reg;
reg   [9:0] t_V_reg_340_pp0_iter15_reg;
reg   [9:0] t_V_reg_340_pp0_iter16_reg;
reg   [9:0] t_V_reg_340_pp0_iter17_reg;
reg   [9:0] t_V_reg_340_pp0_iter18_reg;
reg   [9:0] t_V_reg_340_pp0_iter19_reg;
reg   [9:0] t_V_reg_340_pp0_iter20_reg;
reg   [9:0] t_V_reg_340_pp0_iter21_reg;
reg   [9:0] t_V_reg_340_pp0_iter22_reg;
reg   [9:0] t_V_reg_340_pp0_iter23_reg;
reg   [9:0] t_V_reg_340_pp0_iter24_reg;
reg   [9:0] t_V_reg_340_pp0_iter25_reg;
reg   [9:0] t_V_reg_340_pp0_iter26_reg;
reg   [9:0] t_V_reg_340_pp0_iter27_reg;
reg   [9:0] t_V_reg_340_pp0_iter28_reg;
reg   [9:0] t_V_reg_340_pp0_iter29_reg;
reg   [9:0] t_V_reg_340_pp0_iter30_reg;
reg   [9:0] t_V_reg_340_pp0_iter31_reg;
reg   [9:0] t_V_reg_340_pp0_iter32_reg;
reg   [9:0] t_V_reg_340_pp0_iter33_reg;
reg   [9:0] t_V_reg_340_pp0_iter34_reg;
reg   [9:0] t_V_reg_340_pp0_iter35_reg;
reg   [9:0] t_V_reg_340_pp0_iter36_reg;
reg   [9:0] t_V_reg_340_pp0_iter37_reg;
reg   [9:0] t_V_reg_340_pp0_iter38_reg;
reg   [9:0] t_V_reg_340_pp0_iter39_reg;
reg   [9:0] t_V_reg_340_pp0_iter40_reg;
reg   [9:0] t_V_reg_340_pp0_iter41_reg;
reg   [9:0] t_V_reg_340_pp0_iter42_reg;
reg   [9:0] t_V_reg_340_pp0_iter43_reg;
reg   [9:0] t_V_reg_340_pp0_iter44_reg;
reg   [9:0] t_V_reg_340_pp0_iter45_reg;
reg   [9:0] t_V_reg_340_pp0_iter46_reg;
reg   [9:0] t_V_reg_340_pp0_iter47_reg;
reg   [9:0] t_V_reg_340_pp0_iter48_reg;
reg   [9:0] t_V_reg_340_pp0_iter49_reg;
reg   [9:0] t_V_reg_340_pp0_iter50_reg;
reg   [9:0] t_V_reg_340_pp0_iter51_reg;
reg    ap_block_state1;
reg   [9:0] ch_out_V_read_reg_774;
wire   [0:0] icmp_ln879_fu_429_p2;
reg   [0:0] icmp_ln879_reg_779;
wire   [0:0] icmp_ln879_1_fu_439_p2;
reg   [0:0] icmp_ln879_1_reg_783;
wire   [13:0] trunc_ln215_fu_445_p1;
reg   [13:0] trunc_ln215_reg_789;
wire   [9:0] trunc_ln321_fu_449_p1;
reg   [9:0] trunc_ln321_reg_794;
wire   [0:0] icmp_ln879_2_fu_453_p2;
reg   [0:0] icmp_ln879_2_reg_799;
wire   [2:0] trunc_ln214_fu_459_p1;
reg   [2:0] trunc_ln214_reg_819;
wire   [0:0] icmp_ln83_fu_463_p2;
reg   [0:0] icmp_ln83_reg_824;
wire   [9:0] co_V_fu_468_p2;
reg   [9:0] co_V_reg_828;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] zext_ln544_fu_505_p1;
reg   [63:0] zext_ln544_reg_833;
reg   [63:0] zext_ln544_reg_833_pp0_iter1_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter2_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter3_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter4_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter5_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter6_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter7_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter8_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter9_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter10_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter11_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter12_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter13_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter14_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter15_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter16_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter17_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter18_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter19_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter20_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter21_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter22_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter23_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter24_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter25_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter26_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter27_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter28_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter29_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter30_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter31_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter32_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter33_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter34_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter35_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter36_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter37_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter38_reg;
reg   [63:0] zext_ln544_reg_833_pp0_iter39_reg;
reg   [31:0] weights_temp_0_reg_850;
reg   [31:0] weights_temp_0_reg_850_pp0_iter4_reg;
reg   [31:0] weights_temp_0_reg_850_pp0_iter5_reg;
reg   [31:0] weights_temp_0_reg_850_pp0_iter6_reg;
reg   [31:0] weights_temp_0_reg_850_pp0_iter7_reg;
reg   [31:0] weights_temp_0_reg_850_pp0_iter8_reg;
reg   [31:0] weights_temp_0_reg_850_pp0_iter9_reg;
reg   [31:0] weights_temp_0_reg_850_pp0_iter10_reg;
reg   [31:0] weights_temp_0_reg_850_pp0_iter11_reg;
reg   [31:0] weights_temp_0_reg_850_pp0_iter12_reg;
reg   [31:0] weights_temp_0_reg_850_pp0_iter13_reg;
reg   [31:0] weights_temp_0_reg_850_pp0_iter14_reg;
reg   [31:0] weights_temp_0_reg_850_pp0_iter15_reg;
reg   [31:0] weights_temp_0_reg_850_pp0_iter16_reg;
reg   [31:0] weights_temp_0_reg_850_pp0_iter17_reg;
reg   [31:0] weights_temp_0_reg_850_pp0_iter18_reg;
reg   [31:0] weights_temp_0_reg_850_pp0_iter19_reg;
reg   [31:0] weights_temp_0_reg_850_pp0_iter20_reg;
reg   [31:0] weights_temp_0_reg_850_pp0_iter21_reg;
wire   [31:0] grp_fu_393_p2;
reg   [31:0] tmp22_i_i_reg_865;
reg   [31:0] weights_temp_1_reg_870;
reg   [31:0] weights_temp_1_reg_870_pp0_iter9_reg;
reg   [31:0] weights_temp_1_reg_870_pp0_iter10_reg;
reg   [31:0] weights_temp_1_reg_870_pp0_iter11_reg;
reg   [31:0] weights_temp_1_reg_870_pp0_iter12_reg;
reg   [31:0] weights_temp_1_reg_870_pp0_iter13_reg;
reg   [31:0] weights_temp_1_reg_870_pp0_iter14_reg;
reg   [31:0] weights_temp_1_reg_870_pp0_iter15_reg;
reg   [31:0] weights_temp_1_reg_870_pp0_iter16_reg;
reg   [31:0] weights_temp_1_reg_870_pp0_iter17_reg;
reg   [31:0] weights_temp_1_reg_870_pp0_iter18_reg;
reg   [31:0] weights_temp_1_reg_870_pp0_iter19_reg;
reg   [31:0] weights_temp_1_reg_870_pp0_iter20_reg;
reg   [31:0] weights_temp_1_reg_870_pp0_iter21_reg;
wire   [31:0] grp_fu_397_p2;
reg   [31:0] tmp_1_i_i_reg_885;
wire   [31:0] grp_fu_352_p2;
reg   [31:0] accumulator_i_i_reg_890;
reg   [31:0] weights_temp_2_reg_895;
reg   [31:0] weights_temp_2_reg_895_pp0_iter14_reg;
reg   [31:0] weights_temp_2_reg_895_pp0_iter15_reg;
reg   [31:0] weights_temp_2_reg_895_pp0_iter16_reg;
reg   [31:0] weights_temp_2_reg_895_pp0_iter17_reg;
reg   [31:0] weights_temp_2_reg_895_pp0_iter18_reg;
reg   [31:0] weights_temp_2_reg_895_pp0_iter19_reg;
reg   [31:0] weights_temp_2_reg_895_pp0_iter20_reg;
reg   [31:0] weights_temp_2_reg_895_pp0_iter21_reg;
wire   [31:0] grp_fu_401_p2;
reg   [31:0] tmp_2_i_i_reg_910;
wire   [31:0] grp_fu_357_p2;
reg   [31:0] accumulator_1_i_i_reg_915;
reg   [31:0] weights_temp_3_reg_920;
reg   [31:0] weights_temp_3_reg_920_pp0_iter19_reg;
reg   [31:0] weights_temp_3_reg_920_pp0_iter20_reg;
reg   [31:0] weights_temp_3_reg_920_pp0_iter21_reg;
wire   [2:0] select_ln879_fu_551_p3;
reg   [2:0] select_ln879_reg_950;
wire   [31:0] grp_fu_405_p2;
reg   [31:0] tmp_3_i_i_reg_961;
wire   [31:0] grp_fu_361_p2;
reg   [31:0] accumulator_2_i_i_reg_966;
wire   [31:0] select_ln190_6_fu_704_p3;
reg   [31:0] select_ln190_6_reg_986;
wire   [31:0] grp_fu_409_p2;
reg   [31:0] tmp_5_i_i_reg_991;
reg   [31:0] tmp_5_i_i_reg_991_pp0_iter26_reg;
reg   [31:0] tmp_5_i_i_reg_991_pp0_iter27_reg;
reg   [31:0] tmp_5_i_i_reg_991_pp0_iter28_reg;
reg   [31:0] tmp_5_i_i_reg_991_pp0_iter29_reg;
reg   [31:0] tmp_5_i_i_reg_991_pp0_iter30_reg;
reg   [31:0] tmp_5_i_i_reg_991_pp0_iter31_reg;
wire   [31:0] grp_fu_413_p2;
reg   [31:0] tmp_6_i_i_reg_996;
reg   [31:0] tmp_6_i_i_reg_996_pp0_iter26_reg;
reg   [31:0] tmp_6_i_i_reg_996_pp0_iter27_reg;
reg   [31:0] tmp_6_i_i_reg_996_pp0_iter28_reg;
reg   [31:0] tmp_6_i_i_reg_996_pp0_iter29_reg;
reg   [31:0] tmp_6_i_i_reg_996_pp0_iter30_reg;
reg   [31:0] tmp_6_i_i_reg_996_pp0_iter31_reg;
reg   [31:0] tmp_6_i_i_reg_996_pp0_iter32_reg;
reg   [31:0] tmp_6_i_i_reg_996_pp0_iter33_reg;
reg   [31:0] tmp_6_i_i_reg_996_pp0_iter34_reg;
reg   [31:0] tmp_6_i_i_reg_996_pp0_iter35_reg;
reg   [31:0] tmp_6_i_i_reg_996_pp0_iter36_reg;
wire   [31:0] grp_fu_417_p2;
reg   [31:0] tmp_7_i_i_reg_1001;
reg   [31:0] tmp_7_i_i_reg_1001_pp0_iter26_reg;
reg   [31:0] tmp_7_i_i_reg_1001_pp0_iter27_reg;
reg   [31:0] tmp_7_i_i_reg_1001_pp0_iter28_reg;
reg   [31:0] tmp_7_i_i_reg_1001_pp0_iter29_reg;
reg   [31:0] tmp_7_i_i_reg_1001_pp0_iter30_reg;
reg   [31:0] tmp_7_i_i_reg_1001_pp0_iter31_reg;
reg   [31:0] tmp_7_i_i_reg_1001_pp0_iter32_reg;
reg   [31:0] tmp_7_i_i_reg_1001_pp0_iter33_reg;
reg   [31:0] tmp_7_i_i_reg_1001_pp0_iter34_reg;
reg   [31:0] tmp_7_i_i_reg_1001_pp0_iter35_reg;
reg   [31:0] tmp_7_i_i_reg_1001_pp0_iter36_reg;
reg   [31:0] tmp_7_i_i_reg_1001_pp0_iter37_reg;
reg   [31:0] tmp_7_i_i_reg_1001_pp0_iter38_reg;
reg   [31:0] tmp_7_i_i_reg_1001_pp0_iter39_reg;
reg   [31:0] tmp_7_i_i_reg_1001_pp0_iter40_reg;
reg   [31:0] tmp_7_i_i_reg_1001_pp0_iter41_reg;
wire   [31:0] grp_fu_421_p2;
reg   [31:0] tmp_4_i_i_reg_1006;
wire   [31:0] grp_fu_365_p2;
reg   [31:0] accumulator_3_i_i_reg_1011;
wire   [31:0] grp_fu_369_p2;
reg   [31:0] accumulator_4_i_i_reg_1016;
wire   [31:0] grp_fu_373_p2;
reg   [31:0] accumulator_5_i_i_reg_1021;
wire   [31:0] grp_fu_377_p2;
reg   [31:0] accumulator_6_i_i_reg_1031;
wire   [31:0] grp_fu_425_p2;
reg   [31:0] tmp_8_i_i_reg_1041;
wire   [31:0] grp_fu_381_p2;
reg   [31:0] accumulator_7_i_i_reg_1046;
wire   [31:0] grp_fu_385_p2;
reg   [31:0] accumulator_8_i_i_reg_1051;
reg   [31:0] accumulator_8_i_i_reg_1051_pp0_iter52_reg;
reg   [31:0] accumulator_8_i_i_reg_1051_pp0_iter53_reg;
reg   [31:0] accumulator_8_i_i_reg_1051_pp0_iter54_reg;
reg   [8:0] OutputCache_OBRAM_a_1_reg_1057;
reg   [8:0] OutputCache_OBRAM_a_1_reg_1057_pp0_iter53_reg;
reg   [8:0] OutputCache_OBRAM_a_1_reg_1057_pp0_iter54_reg;
reg   [8:0] OutputCache_OBRAM_a_1_reg_1057_pp0_iter55_reg;
reg   [8:0] OutputCache_OBRAM_a_1_reg_1057_pp0_iter56_reg;
reg   [8:0] OutputCache_OBRAM_a_1_reg_1057_pp0_iter57_reg;
reg   [8:0] OutputCache_OBRAM_a_1_reg_1057_pp0_iter58_reg;
reg   [8:0] OutputCache_OBRAM_a_1_reg_1057_pp0_iter59_reg;
reg   [31:0] old_ch_reg_1063;
reg    ap_enable_reg_pp0_iter54;
wire   [31:0] grp_fu_389_p2;
reg   [31:0] new_ch_reg_1068;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter55;
reg    ap_enable_reg_pp0_iter56;
reg    ap_enable_reg_pp0_iter57;
reg    ap_enable_reg_pp0_iter58;
reg    ap_enable_reg_pp0_iter59;
reg    ap_enable_reg_pp0_iter60;
reg   [9:0] ap_phi_mux_t_V_phi_fu_344_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln544_2_fu_719_p1;
wire   [63:0] zext_ln544_1_fu_724_p1;
wire   [31:0] grp_fu_393_p0;
wire   [31:0] grp_fu_397_p0;
wire   [31:0] grp_fu_401_p0;
wire   [31:0] grp_fu_405_p0;
wire   [31:0] grp_fu_409_p0;
wire   [31:0] grp_fu_413_p0;
wire   [31:0] grp_fu_417_p0;
wire   [31:0] grp_fu_425_p0;
wire   [13:0] zext_ln1353_fu_474_p1;
wire   [13:0] ret_V_fu_478_p2;
wire   [9:0] add_ln321_fu_483_p2;
wire   [9:0] trunc_ln321_4_fu_488_p4;
wire   [9:0] rowID_V_fu_498_p3;
wire   [2:0] trunc_ln214_1_fu_542_p1;
wire   [2:0] weightID_V_fu_546_p2;
wire   [0:0] icmp_ln190_fu_589_p2;
wire   [0:0] and_ln190_fu_594_p2;
wire   [31:0] select_ln879_2_fu_582_p3;
wire   [0:0] icmp_ln190_1_fu_606_p2;
wire   [0:0] and_ln190_1_fu_611_p2;
wire   [31:0] select_ln190_fu_599_p3;
wire   [0:0] icmp_ln190_2_fu_623_p2;
wire   [0:0] and_ln190_2_fu_628_p2;
wire   [31:0] select_ln190_1_fu_616_p3;
wire   [0:0] icmp_ln190_3_fu_640_p2;
wire   [0:0] and_ln190_3_fu_645_p2;
wire   [31:0] select_ln190_2_fu_633_p3;
wire   [0:0] icmp_ln190_4_fu_658_p2;
wire   [0:0] and_ln190_4_fu_663_p2;
wire   [31:0] select_ln190_3_fu_650_p3;
wire   [0:0] icmp_ln190_5_fu_676_p2;
wire   [0:0] and_ln190_5_fu_681_p2;
wire   [31:0] select_ln190_4_fu_668_p3;
wire   [0:0] icmp_ln190_6_fu_694_p2;
wire   [0:0] and_ln190_6_fu_699_p2;
wire   [31:0] select_ln190_5_fu_686_p3;
wire    ap_CS_fsm_state63;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
#0 ap_enable_reg_pp0_iter56 = 1'b0;
#0 ap_enable_reg_pp0_iter57 = 1'b0;
#0 ap_enable_reg_pp0_iter58 = 1'b0;
#0 ap_enable_reg_pp0_iter59 = 1'b0;
#0 ap_enable_reg_pp0_iter60 = 1'b0;
end

fpga_top_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fpga_top_fadd_32ns_32ns_32_5_full_dsp_1_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp22_i_i_reg_865),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_352_p2)
);

fpga_top_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fpga_top_fadd_32ns_32ns_32_5_full_dsp_1_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(accumulator_i_i_reg_890),
    .din1(tmp_1_i_i_reg_885),
    .ce(1'b1),
    .dout(grp_fu_357_p2)
);

fpga_top_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fpga_top_fadd_32ns_32ns_32_5_full_dsp_1_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(accumulator_1_i_i_reg_915),
    .din1(tmp_2_i_i_reg_910),
    .ce(1'b1),
    .dout(grp_fu_361_p2)
);

fpga_top_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fpga_top_fadd_32ns_32ns_32_5_full_dsp_1_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(accumulator_2_i_i_reg_966),
    .din1(tmp_3_i_i_reg_961),
    .ce(1'b1),
    .dout(grp_fu_365_p2)
);

fpga_top_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fpga_top_fadd_32ns_32ns_32_5_full_dsp_1_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(accumulator_3_i_i_reg_1011),
    .din1(tmp_4_i_i_reg_1006),
    .ce(1'b1),
    .dout(grp_fu_369_p2)
);

fpga_top_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fpga_top_fadd_32ns_32ns_32_5_full_dsp_1_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(accumulator_4_i_i_reg_1016),
    .din1(tmp_5_i_i_reg_991_pp0_iter31_reg),
    .ce(1'b1),
    .dout(grp_fu_373_p2)
);

fpga_top_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fpga_top_fadd_32ns_32ns_32_5_full_dsp_1_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(accumulator_5_i_i_reg_1021),
    .din1(tmp_6_i_i_reg_996_pp0_iter36_reg),
    .ce(1'b1),
    .dout(grp_fu_377_p2)
);

fpga_top_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fpga_top_fadd_32ns_32ns_32_5_full_dsp_1_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(accumulator_6_i_i_reg_1031),
    .din1(tmp_7_i_i_reg_1001_pp0_iter41_reg),
    .ce(1'b1),
    .dout(grp_fu_381_p2)
);

fpga_top_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fpga_top_fadd_32ns_32ns_32_5_full_dsp_1_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(accumulator_7_i_i_reg_1046),
    .din1(tmp_8_i_i_reg_1041),
    .ce(1'b1),
    .dout(grp_fu_385_p2)
);

fpga_top_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fpga_top_fadd_32ns_32ns_32_5_full_dsp_1_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(old_ch_reg_1063),
    .din1(accumulator_8_i_i_reg_1051_pp0_iter54_reg),
    .ce(1'b1),
    .dout(grp_fu_389_p2)
);

fpga_top_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fpga_top_fmul_32ns_32ns_32_4_max_dsp_1_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_393_p0),
    .din1(pixels_0_read),
    .ce(1'b1),
    .dout(grp_fu_393_p2)
);

fpga_top_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fpga_top_fmul_32ns_32ns_32_4_max_dsp_1_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_397_p0),
    .din1(pixels_1_read),
    .ce(1'b1),
    .dout(grp_fu_397_p2)
);

fpga_top_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fpga_top_fmul_32ns_32ns_32_4_max_dsp_1_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_401_p0),
    .din1(pixels_2_read),
    .ce(1'b1),
    .dout(grp_fu_401_p2)
);

fpga_top_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fpga_top_fmul_32ns_32ns_32_4_max_dsp_1_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_405_p0),
    .din1(pixels_3_read),
    .ce(1'b1),
    .dout(grp_fu_405_p2)
);

fpga_top_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fpga_top_fmul_32ns_32ns_32_4_max_dsp_1_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_409_p0),
    .din1(pixels_5_read),
    .ce(1'b1),
    .dout(grp_fu_409_p2)
);

fpga_top_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fpga_top_fmul_32ns_32ns_32_4_max_dsp_1_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_413_p0),
    .din1(pixels_6_read),
    .ce(1'b1),
    .dout(grp_fu_413_p2)
);

fpga_top_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fpga_top_fmul_32ns_32ns_32_4_max_dsp_1_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_417_p0),
    .din1(pixels_7_read),
    .ce(1'b1),
    .dout(grp_fu_417_p2)
);

fpga_top_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fpga_top_fmul_32ns_32ns_32_4_max_dsp_1_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln190_6_reg_986),
    .din1(pixels_4_read),
    .ce(1'b1),
    .dout(grp_fu_421_p2)
);

fpga_top_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fpga_top_fmul_32ns_32ns_32_4_max_dsp_1_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_425_p0),
    .din1(pixels_8_read),
    .ce(1'b1),
    .dout(grp_fu_425_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state63)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ci_in_V_empty_n == 1'b0) | (ch_out_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter56 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter57 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter57 <= ap_enable_reg_pp0_iter56;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter58 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter58 <= ap_enable_reg_pp0_iter57;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter59 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter59 <= ap_enable_reg_pp0_iter58;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter60 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter60 <= ap_enable_reg_pp0_iter59;
        end else if ((~((ap_start == 1'b0) | (ci_in_V_empty_n == 1'b0) | (ch_out_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter60 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln83_reg_824 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_reg_340 <= co_V_reg_828;
    end else if ((~((ap_start == 1'b0) | (ci_in_V_empty_n == 1'b0) | (ch_out_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_340 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln879_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        OutputCache_OBRAM_a_1_reg_1057 <= zext_ln544_2_fu_719_p1;
        new_ch_reg_1068 <= grp_fu_389_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        OutputCache_OBRAM_a_1_reg_1057_pp0_iter53_reg <= OutputCache_OBRAM_a_1_reg_1057;
        OutputCache_OBRAM_a_1_reg_1057_pp0_iter54_reg <= OutputCache_OBRAM_a_1_reg_1057_pp0_iter53_reg;
        OutputCache_OBRAM_a_1_reg_1057_pp0_iter55_reg <= OutputCache_OBRAM_a_1_reg_1057_pp0_iter54_reg;
        OutputCache_OBRAM_a_1_reg_1057_pp0_iter56_reg <= OutputCache_OBRAM_a_1_reg_1057_pp0_iter55_reg;
        OutputCache_OBRAM_a_1_reg_1057_pp0_iter57_reg <= OutputCache_OBRAM_a_1_reg_1057_pp0_iter56_reg;
        OutputCache_OBRAM_a_1_reg_1057_pp0_iter58_reg <= OutputCache_OBRAM_a_1_reg_1057_pp0_iter57_reg;
        OutputCache_OBRAM_a_1_reg_1057_pp0_iter59_reg <= OutputCache_OBRAM_a_1_reg_1057_pp0_iter58_reg;
        accumulator_1_i_i_reg_915 <= grp_fu_357_p2;
        accumulator_2_i_i_reg_966 <= grp_fu_361_p2;
        accumulator_3_i_i_reg_1011 <= grp_fu_365_p2;
        accumulator_4_i_i_reg_1016 <= grp_fu_369_p2;
        accumulator_5_i_i_reg_1021 <= grp_fu_373_p2;
        accumulator_6_i_i_reg_1031 <= grp_fu_377_p2;
        accumulator_7_i_i_reg_1046 <= grp_fu_381_p2;
        accumulator_8_i_i_reg_1051 <= grp_fu_385_p2;
        accumulator_8_i_i_reg_1051_pp0_iter52_reg <= accumulator_8_i_i_reg_1051;
        accumulator_8_i_i_reg_1051_pp0_iter53_reg <= accumulator_8_i_i_reg_1051_pp0_iter52_reg;
        accumulator_8_i_i_reg_1051_pp0_iter54_reg <= accumulator_8_i_i_reg_1051_pp0_iter53_reg;
        accumulator_i_i_reg_890 <= grp_fu_352_p2;
        select_ln190_6_reg_986 <= select_ln190_6_fu_704_p3;
        select_ln879_reg_950 <= select_ln879_fu_551_p3;
        t_V_reg_340_pp0_iter10_reg <= t_V_reg_340_pp0_iter9_reg;
        t_V_reg_340_pp0_iter11_reg <= t_V_reg_340_pp0_iter10_reg;
        t_V_reg_340_pp0_iter12_reg <= t_V_reg_340_pp0_iter11_reg;
        t_V_reg_340_pp0_iter13_reg <= t_V_reg_340_pp0_iter12_reg;
        t_V_reg_340_pp0_iter14_reg <= t_V_reg_340_pp0_iter13_reg;
        t_V_reg_340_pp0_iter15_reg <= t_V_reg_340_pp0_iter14_reg;
        t_V_reg_340_pp0_iter16_reg <= t_V_reg_340_pp0_iter15_reg;
        t_V_reg_340_pp0_iter17_reg <= t_V_reg_340_pp0_iter16_reg;
        t_V_reg_340_pp0_iter18_reg <= t_V_reg_340_pp0_iter17_reg;
        t_V_reg_340_pp0_iter19_reg <= t_V_reg_340_pp0_iter18_reg;
        t_V_reg_340_pp0_iter20_reg <= t_V_reg_340_pp0_iter19_reg;
        t_V_reg_340_pp0_iter21_reg <= t_V_reg_340_pp0_iter20_reg;
        t_V_reg_340_pp0_iter22_reg <= t_V_reg_340_pp0_iter21_reg;
        t_V_reg_340_pp0_iter23_reg <= t_V_reg_340_pp0_iter22_reg;
        t_V_reg_340_pp0_iter24_reg <= t_V_reg_340_pp0_iter23_reg;
        t_V_reg_340_pp0_iter25_reg <= t_V_reg_340_pp0_iter24_reg;
        t_V_reg_340_pp0_iter26_reg <= t_V_reg_340_pp0_iter25_reg;
        t_V_reg_340_pp0_iter27_reg <= t_V_reg_340_pp0_iter26_reg;
        t_V_reg_340_pp0_iter28_reg <= t_V_reg_340_pp0_iter27_reg;
        t_V_reg_340_pp0_iter29_reg <= t_V_reg_340_pp0_iter28_reg;
        t_V_reg_340_pp0_iter2_reg <= t_V_reg_340_pp0_iter1_reg;
        t_V_reg_340_pp0_iter30_reg <= t_V_reg_340_pp0_iter29_reg;
        t_V_reg_340_pp0_iter31_reg <= t_V_reg_340_pp0_iter30_reg;
        t_V_reg_340_pp0_iter32_reg <= t_V_reg_340_pp0_iter31_reg;
        t_V_reg_340_pp0_iter33_reg <= t_V_reg_340_pp0_iter32_reg;
        t_V_reg_340_pp0_iter34_reg <= t_V_reg_340_pp0_iter33_reg;
        t_V_reg_340_pp0_iter35_reg <= t_V_reg_340_pp0_iter34_reg;
        t_V_reg_340_pp0_iter36_reg <= t_V_reg_340_pp0_iter35_reg;
        t_V_reg_340_pp0_iter37_reg <= t_V_reg_340_pp0_iter36_reg;
        t_V_reg_340_pp0_iter38_reg <= t_V_reg_340_pp0_iter37_reg;
        t_V_reg_340_pp0_iter39_reg <= t_V_reg_340_pp0_iter38_reg;
        t_V_reg_340_pp0_iter3_reg <= t_V_reg_340_pp0_iter2_reg;
        t_V_reg_340_pp0_iter40_reg <= t_V_reg_340_pp0_iter39_reg;
        t_V_reg_340_pp0_iter41_reg <= t_V_reg_340_pp0_iter40_reg;
        t_V_reg_340_pp0_iter42_reg <= t_V_reg_340_pp0_iter41_reg;
        t_V_reg_340_pp0_iter43_reg <= t_V_reg_340_pp0_iter42_reg;
        t_V_reg_340_pp0_iter44_reg <= t_V_reg_340_pp0_iter43_reg;
        t_V_reg_340_pp0_iter45_reg <= t_V_reg_340_pp0_iter44_reg;
        t_V_reg_340_pp0_iter46_reg <= t_V_reg_340_pp0_iter45_reg;
        t_V_reg_340_pp0_iter47_reg <= t_V_reg_340_pp0_iter46_reg;
        t_V_reg_340_pp0_iter48_reg <= t_V_reg_340_pp0_iter47_reg;
        t_V_reg_340_pp0_iter49_reg <= t_V_reg_340_pp0_iter48_reg;
        t_V_reg_340_pp0_iter4_reg <= t_V_reg_340_pp0_iter3_reg;
        t_V_reg_340_pp0_iter50_reg <= t_V_reg_340_pp0_iter49_reg;
        t_V_reg_340_pp0_iter51_reg <= t_V_reg_340_pp0_iter50_reg;
        t_V_reg_340_pp0_iter5_reg <= t_V_reg_340_pp0_iter4_reg;
        t_V_reg_340_pp0_iter6_reg <= t_V_reg_340_pp0_iter5_reg;
        t_V_reg_340_pp0_iter7_reg <= t_V_reg_340_pp0_iter6_reg;
        t_V_reg_340_pp0_iter8_reg <= t_V_reg_340_pp0_iter7_reg;
        t_V_reg_340_pp0_iter9_reg <= t_V_reg_340_pp0_iter8_reg;
        tmp22_i_i_reg_865 <= grp_fu_393_p2;
        tmp_1_i_i_reg_885 <= grp_fu_397_p2;
        tmp_2_i_i_reg_910 <= grp_fu_401_p2;
        tmp_3_i_i_reg_961 <= grp_fu_405_p2;
        tmp_4_i_i_reg_1006 <= grp_fu_421_p2;
        tmp_5_i_i_reg_991 <= grp_fu_409_p2;
        tmp_5_i_i_reg_991_pp0_iter26_reg <= tmp_5_i_i_reg_991;
        tmp_5_i_i_reg_991_pp0_iter27_reg <= tmp_5_i_i_reg_991_pp0_iter26_reg;
        tmp_5_i_i_reg_991_pp0_iter28_reg <= tmp_5_i_i_reg_991_pp0_iter27_reg;
        tmp_5_i_i_reg_991_pp0_iter29_reg <= tmp_5_i_i_reg_991_pp0_iter28_reg;
        tmp_5_i_i_reg_991_pp0_iter30_reg <= tmp_5_i_i_reg_991_pp0_iter29_reg;
        tmp_5_i_i_reg_991_pp0_iter31_reg <= tmp_5_i_i_reg_991_pp0_iter30_reg;
        tmp_6_i_i_reg_996 <= grp_fu_413_p2;
        tmp_6_i_i_reg_996_pp0_iter26_reg <= tmp_6_i_i_reg_996;
        tmp_6_i_i_reg_996_pp0_iter27_reg <= tmp_6_i_i_reg_996_pp0_iter26_reg;
        tmp_6_i_i_reg_996_pp0_iter28_reg <= tmp_6_i_i_reg_996_pp0_iter27_reg;
        tmp_6_i_i_reg_996_pp0_iter29_reg <= tmp_6_i_i_reg_996_pp0_iter28_reg;
        tmp_6_i_i_reg_996_pp0_iter30_reg <= tmp_6_i_i_reg_996_pp0_iter29_reg;
        tmp_6_i_i_reg_996_pp0_iter31_reg <= tmp_6_i_i_reg_996_pp0_iter30_reg;
        tmp_6_i_i_reg_996_pp0_iter32_reg <= tmp_6_i_i_reg_996_pp0_iter31_reg;
        tmp_6_i_i_reg_996_pp0_iter33_reg <= tmp_6_i_i_reg_996_pp0_iter32_reg;
        tmp_6_i_i_reg_996_pp0_iter34_reg <= tmp_6_i_i_reg_996_pp0_iter33_reg;
        tmp_6_i_i_reg_996_pp0_iter35_reg <= tmp_6_i_i_reg_996_pp0_iter34_reg;
        tmp_6_i_i_reg_996_pp0_iter36_reg <= tmp_6_i_i_reg_996_pp0_iter35_reg;
        tmp_7_i_i_reg_1001 <= grp_fu_417_p2;
        tmp_7_i_i_reg_1001_pp0_iter26_reg <= tmp_7_i_i_reg_1001;
        tmp_7_i_i_reg_1001_pp0_iter27_reg <= tmp_7_i_i_reg_1001_pp0_iter26_reg;
        tmp_7_i_i_reg_1001_pp0_iter28_reg <= tmp_7_i_i_reg_1001_pp0_iter27_reg;
        tmp_7_i_i_reg_1001_pp0_iter29_reg <= tmp_7_i_i_reg_1001_pp0_iter28_reg;
        tmp_7_i_i_reg_1001_pp0_iter30_reg <= tmp_7_i_i_reg_1001_pp0_iter29_reg;
        tmp_7_i_i_reg_1001_pp0_iter31_reg <= tmp_7_i_i_reg_1001_pp0_iter30_reg;
        tmp_7_i_i_reg_1001_pp0_iter32_reg <= tmp_7_i_i_reg_1001_pp0_iter31_reg;
        tmp_7_i_i_reg_1001_pp0_iter33_reg <= tmp_7_i_i_reg_1001_pp0_iter32_reg;
        tmp_7_i_i_reg_1001_pp0_iter34_reg <= tmp_7_i_i_reg_1001_pp0_iter33_reg;
        tmp_7_i_i_reg_1001_pp0_iter35_reg <= tmp_7_i_i_reg_1001_pp0_iter34_reg;
        tmp_7_i_i_reg_1001_pp0_iter36_reg <= tmp_7_i_i_reg_1001_pp0_iter35_reg;
        tmp_7_i_i_reg_1001_pp0_iter37_reg <= tmp_7_i_i_reg_1001_pp0_iter36_reg;
        tmp_7_i_i_reg_1001_pp0_iter38_reg <= tmp_7_i_i_reg_1001_pp0_iter37_reg;
        tmp_7_i_i_reg_1001_pp0_iter39_reg <= tmp_7_i_i_reg_1001_pp0_iter38_reg;
        tmp_7_i_i_reg_1001_pp0_iter40_reg <= tmp_7_i_i_reg_1001_pp0_iter39_reg;
        tmp_7_i_i_reg_1001_pp0_iter41_reg <= tmp_7_i_i_reg_1001_pp0_iter40_reg;
        tmp_8_i_i_reg_1041 <= grp_fu_425_p2;
        weights_temp_0_reg_850 <= WBRAM_0_0_0_q0;
        weights_temp_0_reg_850_pp0_iter10_reg <= weights_temp_0_reg_850_pp0_iter9_reg;
        weights_temp_0_reg_850_pp0_iter11_reg <= weights_temp_0_reg_850_pp0_iter10_reg;
        weights_temp_0_reg_850_pp0_iter12_reg <= weights_temp_0_reg_850_pp0_iter11_reg;
        weights_temp_0_reg_850_pp0_iter13_reg <= weights_temp_0_reg_850_pp0_iter12_reg;
        weights_temp_0_reg_850_pp0_iter14_reg <= weights_temp_0_reg_850_pp0_iter13_reg;
        weights_temp_0_reg_850_pp0_iter15_reg <= weights_temp_0_reg_850_pp0_iter14_reg;
        weights_temp_0_reg_850_pp0_iter16_reg <= weights_temp_0_reg_850_pp0_iter15_reg;
        weights_temp_0_reg_850_pp0_iter17_reg <= weights_temp_0_reg_850_pp0_iter16_reg;
        weights_temp_0_reg_850_pp0_iter18_reg <= weights_temp_0_reg_850_pp0_iter17_reg;
        weights_temp_0_reg_850_pp0_iter19_reg <= weights_temp_0_reg_850_pp0_iter18_reg;
        weights_temp_0_reg_850_pp0_iter20_reg <= weights_temp_0_reg_850_pp0_iter19_reg;
        weights_temp_0_reg_850_pp0_iter21_reg <= weights_temp_0_reg_850_pp0_iter20_reg;
        weights_temp_0_reg_850_pp0_iter4_reg <= weights_temp_0_reg_850;
        weights_temp_0_reg_850_pp0_iter5_reg <= weights_temp_0_reg_850_pp0_iter4_reg;
        weights_temp_0_reg_850_pp0_iter6_reg <= weights_temp_0_reg_850_pp0_iter5_reg;
        weights_temp_0_reg_850_pp0_iter7_reg <= weights_temp_0_reg_850_pp0_iter6_reg;
        weights_temp_0_reg_850_pp0_iter8_reg <= weights_temp_0_reg_850_pp0_iter7_reg;
        weights_temp_0_reg_850_pp0_iter9_reg <= weights_temp_0_reg_850_pp0_iter8_reg;
        weights_temp_1_reg_870 <= WBRAM_0_0_1_q0;
        weights_temp_1_reg_870_pp0_iter10_reg <= weights_temp_1_reg_870_pp0_iter9_reg;
        weights_temp_1_reg_870_pp0_iter11_reg <= weights_temp_1_reg_870_pp0_iter10_reg;
        weights_temp_1_reg_870_pp0_iter12_reg <= weights_temp_1_reg_870_pp0_iter11_reg;
        weights_temp_1_reg_870_pp0_iter13_reg <= weights_temp_1_reg_870_pp0_iter12_reg;
        weights_temp_1_reg_870_pp0_iter14_reg <= weights_temp_1_reg_870_pp0_iter13_reg;
        weights_temp_1_reg_870_pp0_iter15_reg <= weights_temp_1_reg_870_pp0_iter14_reg;
        weights_temp_1_reg_870_pp0_iter16_reg <= weights_temp_1_reg_870_pp0_iter15_reg;
        weights_temp_1_reg_870_pp0_iter17_reg <= weights_temp_1_reg_870_pp0_iter16_reg;
        weights_temp_1_reg_870_pp0_iter18_reg <= weights_temp_1_reg_870_pp0_iter17_reg;
        weights_temp_1_reg_870_pp0_iter19_reg <= weights_temp_1_reg_870_pp0_iter18_reg;
        weights_temp_1_reg_870_pp0_iter20_reg <= weights_temp_1_reg_870_pp0_iter19_reg;
        weights_temp_1_reg_870_pp0_iter21_reg <= weights_temp_1_reg_870_pp0_iter20_reg;
        weights_temp_1_reg_870_pp0_iter9_reg <= weights_temp_1_reg_870;
        weights_temp_2_reg_895 <= WBRAM_0_0_2_q0;
        weights_temp_2_reg_895_pp0_iter14_reg <= weights_temp_2_reg_895;
        weights_temp_2_reg_895_pp0_iter15_reg <= weights_temp_2_reg_895_pp0_iter14_reg;
        weights_temp_2_reg_895_pp0_iter16_reg <= weights_temp_2_reg_895_pp0_iter15_reg;
        weights_temp_2_reg_895_pp0_iter17_reg <= weights_temp_2_reg_895_pp0_iter16_reg;
        weights_temp_2_reg_895_pp0_iter18_reg <= weights_temp_2_reg_895_pp0_iter17_reg;
        weights_temp_2_reg_895_pp0_iter19_reg <= weights_temp_2_reg_895_pp0_iter18_reg;
        weights_temp_2_reg_895_pp0_iter20_reg <= weights_temp_2_reg_895_pp0_iter19_reg;
        weights_temp_2_reg_895_pp0_iter21_reg <= weights_temp_2_reg_895_pp0_iter20_reg;
        weights_temp_3_reg_920 <= WBRAM_0_0_3_q0;
        weights_temp_3_reg_920_pp0_iter19_reg <= weights_temp_3_reg_920;
        weights_temp_3_reg_920_pp0_iter20_reg <= weights_temp_3_reg_920_pp0_iter19_reg;
        weights_temp_3_reg_920_pp0_iter21_reg <= weights_temp_3_reg_920_pp0_iter20_reg;
        zext_ln544_reg_833_pp0_iter10_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter9_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter11_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter10_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter12_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter11_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter13_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter12_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter14_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter13_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter15_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter14_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter16_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter15_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter17_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter16_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter18_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter17_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter19_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter18_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter20_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter19_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter21_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter20_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter22_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter21_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter23_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter22_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter24_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter23_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter25_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter24_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter26_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter25_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter27_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter26_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter28_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter27_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter29_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter28_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter2_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter1_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter30_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter29_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter31_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter30_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter32_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter31_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter33_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter32_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter34_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter33_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter35_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter34_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter36_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter35_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter37_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter36_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter38_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter37_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter39_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter38_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter3_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter2_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter4_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter3_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter5_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter4_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter6_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter5_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter7_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter6_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter8_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter7_reg[9 : 0];
        zext_ln544_reg_833_pp0_iter9_reg[9 : 0] <= zext_ln544_reg_833_pp0_iter8_reg[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ci_in_V_empty_n == 1'b0) | (ch_out_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ch_out_V_read_reg_774 <= ch_out_V_dout;
        icmp_ln879_1_reg_783 <= icmp_ln879_1_fu_439_p2;
        icmp_ln879_2_reg_799 <= icmp_ln879_2_fu_453_p2;
        icmp_ln879_reg_779 <= icmp_ln879_fu_429_p2;
        trunc_ln214_reg_819 <= trunc_ln214_fu_459_p1;
        trunc_ln215_reg_789 <= trunc_ln215_fu_445_p1;
        trunc_ln321_reg_794 <= trunc_ln321_fu_449_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        co_V_reg_828 <= co_V_fu_468_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln83_reg_824 <= icmp_ln83_fu_463_p2;
        t_V_reg_340_pp0_iter1_reg <= t_V_reg_340;
        zext_ln544_reg_833_pp0_iter1_reg[9 : 0] <= zext_ln544_reg_833[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln879_reg_779 == 1'd0) & (ap_enable_reg_pp0_iter54 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        old_ch_reg_1063 <= OutputCache_OBRAM_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln83_fu_463_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zext_ln544_reg_833[9 : 0] <= zext_ln544_fu_505_p1[9 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter52 == 1'b1))) begin
        if ((icmp_ln879_reg_779 == 1'd1)) begin
            OutputCache_OBRAM_address0 = zext_ln544_1_fu_724_p1;
        end else if ((icmp_ln879_reg_779 == 1'd0)) begin
            OutputCache_OBRAM_address0 = zext_ln544_2_fu_719_p1;
        end else begin
            OutputCache_OBRAM_address0 = 'bx;
        end
    end else begin
        OutputCache_OBRAM_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter53 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln879_reg_779 == 1'd1) & (ap_enable_reg_pp0_iter52 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter54 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln879_reg_779 == 1'd0) & (ap_enable_reg_pp0_iter52 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        OutputCache_OBRAM_ce0 = 1'b1;
    end else begin
        OutputCache_OBRAM_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter60 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        OutputCache_OBRAM_ce1 = 1'b1;
    end else begin
        OutputCache_OBRAM_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln879_reg_779 == 1'd1) & (ap_enable_reg_pp0_iter52 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        OutputCache_OBRAM_we0 = 1'b1;
    end else begin
        OutputCache_OBRAM_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln879_reg_779 == 1'd0) & (ap_enable_reg_pp0_iter60 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        OutputCache_OBRAM_we1 = 1'b1;
    end else begin
        OutputCache_OBRAM_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        WBRAM_0_0_0_ce0 = 1'b1;
    end else begin
        WBRAM_0_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        WBRAM_0_0_1_ce0 = 1'b1;
    end else begin
        WBRAM_0_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        WBRAM_0_0_2_ce0 = 1'b1;
    end else begin
        WBRAM_0_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        WBRAM_0_0_3_ce0 = 1'b1;
    end else begin
        WBRAM_0_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        WBRAM_0_0_4_ce0 = 1'b1;
    end else begin
        WBRAM_0_0_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        WBRAM_0_0_5_ce0 = 1'b1;
    end else begin
        WBRAM_0_0_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        WBRAM_0_0_6_ce0 = 1'b1;
    end else begin
        WBRAM_0_0_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        WBRAM_0_0_7_ce0 = 1'b1;
    end else begin
        WBRAM_0_0_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter43 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter42 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter41 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter40 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        WBRAM_0_0_8_ce0 = 1'b1;
    end else begin
        WBRAM_0_0_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln83_fu_463_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter60 == 1'b0) & (ap_enable_reg_pp0_iter59 == 1'b0) & (ap_enable_reg_pp0_iter58 == 1'b0) & (ap_enable_reg_pp0_iter57 == 1'b0) & (ap_enable_reg_pp0_iter56 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln83_reg_824 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_t_V_phi_fu_344_p4 = co_V_reg_828;
    end else begin
        ap_phi_mux_t_V_phi_fu_344_p4 = t_V_reg_340;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ch_out_V_blk_n = ch_out_V_empty_n;
    end else begin
        ch_out_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ci_in_V_empty_n == 1'b0) | (ch_out_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ch_out_V_read = 1'b1;
    end else begin
        ch_out_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ci_in_V_blk_n = ci_in_V_empty_n;
    end else begin
        ci_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ci_in_V_empty_n == 1'b0) | (ch_out_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ci_in_V_read = 1'b1;
    end else begin
        ci_in_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ci_in_V_empty_n == 1'b0) | (ch_out_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln83_fu_463_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter59 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter60 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter59 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter60 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln83_fu_463_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OutputCache_OBRAM_address1 = OutputCache_OBRAM_a_1_reg_1057_pp0_iter59_reg;

assign OutputCache_OBRAM_d0 = accumulator_8_i_i_reg_1051;

assign OutputCache_OBRAM_d1 = new_ch_reg_1068;

assign WBRAM_0_0_0_address0 = zext_ln544_fu_505_p1;

assign WBRAM_0_0_1_address0 = zext_ln544_reg_833_pp0_iter4_reg;

assign WBRAM_0_0_2_address0 = zext_ln544_reg_833_pp0_iter9_reg;

assign WBRAM_0_0_3_address0 = zext_ln544_reg_833_pp0_iter14_reg;

assign WBRAM_0_0_4_address0 = zext_ln544_reg_833_pp0_iter18_reg;

assign WBRAM_0_0_5_address0 = zext_ln544_reg_833_pp0_iter18_reg;

assign WBRAM_0_0_6_address0 = zext_ln544_reg_833_pp0_iter18_reg;

assign WBRAM_0_0_7_address0 = zext_ln544_reg_833_pp0_iter18_reg;

assign WBRAM_0_0_8_address0 = zext_ln544_reg_833_pp0_iter39_reg;

assign add_ln321_fu_483_p2 = (trunc_ln321_reg_794 + ap_phi_mux_t_V_phi_fu_344_p4);

assign and_ln190_1_fu_611_p2 = (icmp_ln879_2_reg_799 & icmp_ln190_1_fu_606_p2);

assign and_ln190_2_fu_628_p2 = (icmp_ln879_2_reg_799 & icmp_ln190_2_fu_623_p2);

assign and_ln190_3_fu_645_p2 = (icmp_ln879_2_reg_799 & icmp_ln190_3_fu_640_p2);

assign and_ln190_4_fu_663_p2 = (icmp_ln879_2_reg_799 & icmp_ln190_4_fu_658_p2);

assign and_ln190_5_fu_681_p2 = (icmp_ln879_2_reg_799 & icmp_ln190_5_fu_676_p2);

assign and_ln190_6_fu_699_p2 = (icmp_ln879_2_reg_799 & icmp_ln190_6_fu_694_p2);

assign and_ln190_fu_594_p2 = (icmp_ln879_2_reg_799 & icmp_ln190_fu_589_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ci_in_V_empty_n == 1'b0) | (ch_out_V_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage0_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter54 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter55 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter56 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage0_iter57 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage0_iter58 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter59 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage0_iter60 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign co_V_fu_468_p2 = (ap_phi_mux_t_V_phi_fu_344_p4 + 10'd1);

assign grp_fu_393_p0 = ((icmp_ln879_2_reg_799[0:0] === 1'b1) ? 32'd0 : WBRAM_0_0_0_q0);

assign grp_fu_397_p0 = ((icmp_ln879_2_reg_799[0:0] === 1'b1) ? 32'd0 : WBRAM_0_0_1_q0);

assign grp_fu_401_p0 = ((icmp_ln879_2_reg_799[0:0] === 1'b1) ? 32'd0 : WBRAM_0_0_2_q0);

assign grp_fu_405_p0 = ((icmp_ln879_2_reg_799[0:0] === 1'b1) ? 32'd0 : WBRAM_0_0_3_q0);

assign grp_fu_409_p0 = ((icmp_ln879_2_reg_799[0:0] === 1'b1) ? 32'd0 : WBRAM_0_0_5_q0);

assign grp_fu_413_p0 = ((icmp_ln879_2_reg_799[0:0] === 1'b1) ? 32'd0 : WBRAM_0_0_6_q0);

assign grp_fu_417_p0 = ((icmp_ln879_2_reg_799[0:0] === 1'b1) ? 32'd0 : WBRAM_0_0_7_q0);

assign grp_fu_425_p0 = ((icmp_ln879_2_reg_799[0:0] === 1'b1) ? 32'd0 : WBRAM_0_0_8_q0);

assign icmp_ln190_1_fu_606_p2 = ((select_ln879_reg_950 == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln190_2_fu_623_p2 = ((select_ln879_reg_950 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln190_3_fu_640_p2 = ((select_ln879_reg_950 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln190_4_fu_658_p2 = ((select_ln879_reg_950 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln190_5_fu_676_p2 = ((select_ln879_reg_950 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln190_6_fu_694_p2 = ((select_ln879_reg_950 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln190_fu_589_p2 = ((select_ln879_reg_950 == 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_463_p2 = ((ap_phi_mux_t_V_phi_fu_344_p4 == ch_out_V_read_reg_774) ? 1'b1 : 1'b0);

assign icmp_ln879_1_fu_439_p2 = ((WeightsCache_kernel == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln879_2_fu_453_p2 = ((WeightsCache_kernel == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_429_p2 = ((ci_in_V_dout == 10'd0) ? 1'b1 : 1'b0);

assign ret_V_fu_478_p2 = (zext_ln1353_fu_474_p1 + trunc_ln215_reg_789);

assign rowID_V_fu_498_p3 = ((icmp_ln879_1_reg_783[0:0] === 1'b1) ? add_ln321_fu_483_p2 : trunc_ln321_4_fu_488_p4);

assign select_ln190_1_fu_616_p3 = ((and_ln190_1_fu_611_p2[0:0] === 1'b1) ? weights_temp_2_reg_895_pp0_iter21_reg : select_ln190_fu_599_p3);

assign select_ln190_2_fu_633_p3 = ((and_ln190_2_fu_628_p2[0:0] === 1'b1) ? weights_temp_3_reg_920_pp0_iter21_reg : select_ln190_1_fu_616_p3);

assign select_ln190_3_fu_650_p3 = ((and_ln190_3_fu_645_p2[0:0] === 1'b1) ? WBRAM_0_0_4_q0 : select_ln190_2_fu_633_p3);

assign select_ln190_4_fu_668_p3 = ((and_ln190_4_fu_663_p2[0:0] === 1'b1) ? WBRAM_0_0_5_q0 : select_ln190_3_fu_650_p3);

assign select_ln190_5_fu_686_p3 = ((and_ln190_5_fu_681_p2[0:0] === 1'b1) ? WBRAM_0_0_6_q0 : select_ln190_4_fu_668_p3);

assign select_ln190_6_fu_704_p3 = ((and_ln190_6_fu_699_p2[0:0] === 1'b1) ? weights_temp_0_reg_850_pp0_iter21_reg : select_ln190_5_fu_686_p3);

assign select_ln190_fu_599_p3 = ((and_ln190_fu_594_p2[0:0] === 1'b1) ? weights_temp_1_reg_870_pp0_iter21_reg : select_ln879_2_fu_582_p3);

assign select_ln879_2_fu_582_p3 = ((icmp_ln879_2_reg_799[0:0] === 1'b1) ? WBRAM_0_0_7_q0 : WBRAM_0_0_4_q0);

assign select_ln879_fu_551_p3 = ((icmp_ln879_1_reg_783[0:0] === 1'b1) ? 3'd0 : weightID_V_fu_546_p2);

assign trunc_ln214_1_fu_542_p1 = t_V_reg_340_pp0_iter20_reg[2:0];

assign trunc_ln214_fu_459_p1 = p_read[2:0];

assign trunc_ln215_fu_445_p1 = p_read[13:0];

assign trunc_ln321_4_fu_488_p4 = {{ret_V_fu_478_p2[12:3]}};

assign trunc_ln321_fu_449_p1 = p_read[9:0];

assign weightID_V_fu_546_p2 = (trunc_ln214_reg_819 + trunc_ln214_1_fu_542_p1);

assign zext_ln1353_fu_474_p1 = ap_phi_mux_t_V_phi_fu_344_p4;

assign zext_ln544_1_fu_724_p1 = t_V_reg_340_pp0_iter51_reg;

assign zext_ln544_2_fu_719_p1 = t_V_reg_340_pp0_iter51_reg;

assign zext_ln544_fu_505_p1 = rowID_V_fu_498_p3;

always @ (posedge ap_clk) begin
    zext_ln544_reg_833[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter1_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter2_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter3_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter4_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter5_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter6_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter7_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter8_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter9_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter10_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter11_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter12_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter13_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter14_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter15_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter16_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter17_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter18_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter19_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter20_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter21_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter22_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter23_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter24_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter25_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter26_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter27_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter28_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter29_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter30_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter31_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter32_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter33_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter34_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter35_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter36_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter37_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter38_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln544_reg_833_pp0_iter39_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
end

endmodule //processAllCHout
